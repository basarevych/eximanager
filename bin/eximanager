#!/usr/bin/env node

'use strict'

var argv            = require('minimist')(process.argv.slice(2)),
    ServiceLocator  = require('../src/service-locator.js'),
    Console         = require('../src/console.js'),
    FileManager     = require('../src/file-manager.js'),
    Table           = require('../src/table.js'),
    Init            = require('../src/init.js'),
    Domain          = require('../src/domain.js');

var sl = new ServiceLocator(),
    cons = new Console(sl),
    manager = new FileManager(sl),
    table = new Table(sl),
    init = new Init(sl),
    domain = new Domain(sl);

if (argv['_'].length == 0)
    showUsage();

if (argv['_'].length && argv['_'][0] != 'init' && !sl.has('config')) {
    var rl = cons.getReadline();

    rl.write("\nError:\t\tEximanager is not initialized\n");
    rl.write("\t\tPlease run 'eximanager init' before using\n\n");
    rl.close();

    process.exit(2);
}

switch (argv['_'][0]) {
    case 'help':
        showUsage(argv['_'].length > 1 ? argv['_'][1] : 'help');
        break;

    case 'init':
        var dir = argv['d'] ? argv['d'] : argv['dir'];
        if (!dir)
            showUsage('init');

        init.createConfig(dir);
        break;

    case 'domain-list':
        domain.list();
        break;

    default:
        var rl = cons.getReadline();
        rl.write("\nError: \t\tUnkown command: " + argv['_'][0] + "\n\n");
        rl.close();
        process.exit(1);
}

function showUsage(command) {
    var rl = cons.getReadline();

    rl.write("\n");
    switch (command) {
        case 'help':
            rl.write("Usage:\teximanager help <command>\n\n");
            rl.write("\tPrint usage help on <command>\n");
            break;

        case 'init':
            rl.write("Usage:\teximanager init -d|--dir <configuration-directory>\n\n");
            rl.write("\tCreate configuration file (eximanager.conf.js)\n");
            rl.write("\t<configuration-directory> is either /etc or /usr/local/etc\n");
            break;

        case 'domain-list':
            rl.write("Usage:\teximanager domain-list\n\n");
            rl.write("\tPrint all the defined virtual mail domains\n");
            break;

        default:
            rl.write("Usage:\teximanager <command> [options]\n");
            rl.write("\nCommands:\n");
            rl.write("\thelp\t\tPrint help screen\n");
            rl.write("\tinit\t\tInitialize Eximanager\n");
            rl.write("\tdomain-list\tList virtual domains\n");
    }

    rl.write("\n");
    rl.close();

    process.exit(1);
}
